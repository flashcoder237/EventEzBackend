"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
SECRET_KEY = 'django-insecure-sk#x6&*vo8)1zlxj_&2cafx7mi*tb7lkm!s87sl04=+ow5x!*j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition

# Application definition
INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Applications tierces
    'admin_interface',
    'colorfield',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'django_filters',
    'qrcode',
    'drf_spectacular',
    
    # Applications du projet
    'apps.accounts',
    'apps.events',
    'apps.registrations',
    'apps.payments',
    'apps.feedback',
    'apps.notifications',
    'apps.core',
    'apps.analytics',
    'apps.user_messages',
]

# Configuration des tâches périodiques Celery
from celery.schedules import crontab

CELERY_BEAT_SCHEDULE = {
    # Générer les rapports programmés chaque heure
    'generate-scheduled-reports': {
        'task': 'apps.analytics.tasks.generate_scheduled_reports',
        'schedule': crontab(minute=0),  # Chaque heure à la minute 0
    },
    # Nettoyer les anciens rapports une fois par semaine
    'clean-old-reports': {
        'task': 'apps.analytics.tasks.clean_old_reports',
        'schedule': crontab(hour=0, minute=0, day_of_week=1),  # Lundi à minuit
    },
}

# Configuration des bibliothèques d'analyse
ANALYTICS = {
    'REPORT_EXPIRATION_DAYS': 30,  # Durée de conservation des rapports non programmés en jours
    'DEFAULT_CHART_COLORS': [
        '#6d28d9',  # Violet principal
        '#ec4899',  # Rose principal
        '#8b5cf6',  # Violet secondaire
        '#f472b6',  # Rose secondaire
        '#d946ef',  # Magenta
        '#38bdf8',  # Bleu clair
        '#10b981',  # Vert
        '#f59e0b',  # Orange
        '#ef4444',  # Rouge
    ],
    'MAX_DATA_POINTS': 100,  # Nombre maximal de points de données à afficher dans les graphiques
    'DEFAULT_DASHBOARD_THEME': 'light',
    'ALLOWED_EXPORT_FORMATS': ['pdf', 'csv', 'json'],
}

X_FRAME_OPTIONS = 'SAMEORIGIN'  # Requis pour l'éditeur de couleurs
# Configuration de Jazzmin
JAZZMIN_SETTINGS = {
    # Titre
    "site_title": "Eventez Admin",
    "site_header": "EventEz",
    "site_brand": "EventEz",
    "site_logo": "logo-icon.png",
    "login_logo": "logo.png",
    "login_logo_dark": "logo.png",
    "site_logo_classes": "img-square",
    "site_icon": "logo-icon.png",
    
    # Couleurs et UI
    "welcome_sign": "Bienvenue dans l'administration Eventez",
    "copyright": "Eventez Ltd",
    "search_model": ["accounts.User", "events.Event"],
    "user_avatar": None,
    
    # Style
    "topmenu_links": [
        {"name": "Accueil", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "Site", "url": "/", "new_window": True},
    ],
    
    # Menu latéral
    "show_sidebar": True,
    "navigation_expanded": True,
    "hide_apps": [],
    "hide_models": [],
    "order_with_respect_to": ["accounts", "events", "registrations"],
    
    # Thème
    "custom_css": None,
    "custom_js": None,
    "use_google_fonts_cdn": True,
    "show_ui_builder": True,
    
    # Liens
    "related_modal_active": False,
    "custom_links": {
        "events": [{
            "name": "Voir sur le site", 
            "url": "/events/", 
            "icon": "fas fa-globe"
        }]
    },
    
    # Tableaux de bord
    "changeform_format": "horizontal_tabs",
    "changeform_format_overrides": {"accounts.user": "collapsible"},
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "accounts.user": "fas fa-user-tie",
        "events.event": "fas fa-calendar-alt",
    },
}

# Thèmes UI disponibles
JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-gray",
    "accent": "accent-indigo",
    "navbar": "navbar-white navbar-light",
    "no_navbar_border": True,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-pink",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": True,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": True,
    "theme": "sandstone",
    "dark_mode_theme": "darkly",
    "button_classes": {
        "primary": "btn-outline-primary",
        "secondary": "btn-outline-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    },
    "actions_sticky_top": True
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Ajouté pour trouver les templates d'emails
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'eventez_db',
        'USER': 'postgres',
        'PASSWORD': 'root',  # Changez ceci en production
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'Africa/Douala'  # Fuseau horaire du Cameroun
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATICFILE_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Modèle utilisateur personnalisé
AUTH_USER_MODEL = 'accounts.User'

# Configuration de Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
}
SPECTACULAR_SETTINGS = {
    'TITLE': 'Eventez API',
    'DESCRIPTION': 'API documentation for Eventez',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

# Configuration de JWT
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(hours=1),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

# Configuration CORS
CORS_ALLOW_ALL_ORIGINS = True  # En développement seulement
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",  # Frontend React/Next.js
# ]

# URL du frontend pour les liens dans les emails
FRONTEND_URL = os.environ.get('FRONTEND_URL', 'http://localhost:3000')

# Configuration Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Exemple avec Gmail
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'cedrictefoye@gmail.com'
EMAIL_HOST_PASSWORD = 'lzbs tklj xfrm hqyk'  # Utilisez des variables d'environnement en production
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', 'noreply@eventez.com')

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/debug.log'),
            'formatter': 'verbose',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'apps': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# Répertoire pour les logs
os.makedirs(os.path.join(BASE_DIR, 'logs'), exist_ok=True)