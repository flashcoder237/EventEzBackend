# Generated by Django 5.1.7 on 2025-03-18 11:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('event_performance', "Performance d'événement"), ('revenue_summary', 'Résumé des revenus'), ('user_activity', 'Activité utilisateur'), ('registration_trends', "Tendances d'inscription"), ('payment_analysis', 'Analyse des paiements'), ('custom', 'Rapport personnalisé')], max_length=50)),
                ('data', models.JSONField(default=dict)),
                ('filters', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('schedule_frequency', models.CharField(choices=[('once', 'Une seule fois'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel')], default='once', max_length=20)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('email_on_generation', models.BooleanField(default=False)),
                ('export_format', models.CharField(choices=[('pdf', 'PDF'), ('csv', 'CSV'), ('json', 'JSON')], default='pdf', max_length=20)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics_reports', to='events.event')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_reports', to=settings.AUTH_USER_MODEL)),
                ('recipients', models.ManyToManyField(blank=True, related_name='subscribed_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rapport analytique',
                'verbose_name_plural': 'Rapports analytiques',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('layout', models.JSONField(default=dict)),
                ('theme', models.CharField(default='default', max_length=50)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_dashboards', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_dashboards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tableau de bord',
                'verbose_name_plural': 'Tableaux de bord',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('widget_type', models.CharField(choices=[('number', 'Indicateur chiffré'), ('chart', 'Graphique'), ('table', 'Tableau'), ('map', 'Carte'), ('list', 'Liste')], max_length=20)),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Ligne'), ('bar', 'Barre'), ('pie', 'Camembert'), ('doughnut', 'Anneau'), ('area', 'Surface'), ('radar', 'Radar'), ('scatter', 'Nuage de points')], max_length=20, null=True)),
                ('data_source', models.CharField(choices=[('event_count', "Nombre d'événements"), ('registration_count', "Nombre d'inscriptions"), ('revenue', 'Revenus'), ('user_count', "Nombre d'utilisateurs"), ('event_types', "Types d'événements"), ('payment_methods', 'Méthodes de paiement'), ('revenue_trends', 'Tendances des revenus'), ('registration_trends', 'Tendances des inscriptions'), ('geographical', 'Répartition géographique'), ('custom_query', 'Requête personnalisée')], max_length=50)),
                ('config', models.JSONField(default=dict)),
                ('position_x', models.IntegerField(default=0)),
                ('position_y', models.IntegerField(default=0)),
                ('width', models.IntegerField(default=1)),
                ('height', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_widgets', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Widget de tableau de bord',
                'verbose_name_plural': 'Widgets de tableau de bord',
                'ordering': ['position_y', 'position_x'],
            },
        ),
    ]
